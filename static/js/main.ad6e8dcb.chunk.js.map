{"version":3,"sources":["common.ts","GridPage.tsx","HomePage.tsx","SpeakerPage.tsx","App.tsx","index.tsx","GridPage.module.css","SpeakerPage.module.css"],"names":["onConnected","room","participants","size","startRecording","once","RoomEvent","ParticipantConnected","on","ParticipantDisconnected","stopRecording","onParticipantDisconnected","console","log","useParams","query","URLSearchParams","useLocation","search","url","get","undefined","token","GridPage","interfaceStyle","className","containerClass","onLeave","stageRenderer","renderStage","adaptiveVideo","roomState","error","audioTracks","React","useState","visibleParticipants","setVisibleParticipants","styles","grid1x1","gridClass","setGridClass","useEffect","newParticipants","forEach","p","has","sid","push","activeSpeakers","speaker","includes","LocalParticipant","unshift","i","length","participant","RemoteParticipant","grid3x3","splice","grid2x2","grid2x1","audioRenderers","map","track","isLocal","stage","orientation","width","height","identity","HomePage","SpeakerPage","screenTrack","message","remoteParticipants","filter","videoTracks","trackName","otherParticipants","mainView","slice","quality","VideoQuality","HIGH","stageCenter","stageSidebar","App","path","component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.ad6e8dcb.chunk.js","sourcesContent":["import { Room, RoomEvent } from 'livekit-client';\nimport { useLocation } from 'react-router-dom';\n\nexport interface TemplateProps {\n  interfaceStyle?: 'dark' | 'light';\n}\n\nexport interface ConnectionParams {\n  url?: string;\n  token?: string;\n}\n\nexport function onConnected(room: Room) {\n  if (room.participants.size > 0) {\n    startRecording();\n  } else {\n    room.once(RoomEvent.ParticipantConnected, startRecording);\n  }\n\n  room.on(RoomEvent.ParticipantDisconnected, () => onParticipantDisconnected(room));\n}\n\nexport function onParticipantDisconnected(room: Room) {\n  if (room.participants.size === 0) {\n    stopRecording();\n  }\n}\n\nexport function stopRecording() {\n  console.log('END_RECORDING');\n}\n\nexport function startRecording() {\n  console.log('START_RECORDING');\n}\n\nexport function useParams(): ConnectionParams {\n  const query = new URLSearchParams(useLocation().search);\n  return {\n    url: query.get('url') ?? undefined,\n    token: query.get('token') ?? undefined,\n  };\n}\n","import {\n  LocalParticipant, Participant, RemoteParticipant,\n} from 'livekit-client';\nimport {\n  AudioRenderer, LiveKitRoom, ParticipantView, StageProps,\n} from 'livekit-react';\nimport React, { useEffect } from 'react';\nimport {\n  onConnected, stopRecording, TemplateProps, useParams,\n} from './common';\nimport styles from './GridPage.module.css';\n\nexport default function GridPage({ interfaceStyle }: TemplateProps) {\n  const { url, token } = useParams();\n\n  if (!url || !token) {\n    return <div className=\"error\">missing required params url and token</div>;\n  }\n\n  let containerClass = 'roomContainer';\n  if (interfaceStyle) {\n    containerClass += ` ${interfaceStyle}`;\n  }\n  return (\n    <div className={containerClass}>\n      <LiveKitRoom\n        url={url}\n        token={token}\n        onConnected={onConnected}\n        onLeave={stopRecording}\n        stageRenderer={renderStage}\n        adaptiveVideo\n      />\n    </div>\n  );\n}\n\nconst renderStage: React.FC<StageProps> = ({ roomState }: StageProps) => {\n  const {\n    error, room, participants, audioTracks,\n  } = roomState;\n  const [visibleParticipants, setVisibleParticipants] = React.useState<Participant[]>([]);\n  const [gridClass, setGridClass] = React.useState(styles.grid1x1);\n\n  // select participants to display on first page, keeping ordering consistent if possible.\n  useEffect(() => {\n    // remove any participants that are no longer connected\n    const newParticipants: Participant[] = [];\n    visibleParticipants.forEach((p) => {\n      if (room?.participants.has(p.sid)) {\n        newParticipants.push(p);\n      }\n    });\n\n    // ensure active speaker is visible\n    room?.activeSpeakers.forEach((speaker) => {\n      if (newParticipants.includes(speaker) || speaker instanceof LocalParticipant) {\n        return;\n      }\n      newParticipants.unshift(speaker);\n    });\n\n    for (let i = 0; i < participants.length; i += 1) {\n      const participant = participants[i];\n      if (participant instanceof RemoteParticipant && !newParticipants.includes(participant)) {\n        newParticipants.push(participants[i]);\n      }\n      // max of 3x3 grid\n      if (newParticipants.length > 9) {\n        return;\n      }\n    }\n    if (newParticipants.length >= 9) {\n      setGridClass(styles.grid3x3);\n      newParticipants.splice(9, newParticipants.length - 9);\n    } else if (newParticipants.length >= 6) {\n      setGridClass(styles.grid3x3);\n      // one empty row\n    } else if (newParticipants.length >= 4) {\n      setGridClass(styles.grid2x2);\n      newParticipants.splice(4, newParticipants.length - 4);\n    } else if (newParticipants.length === 3) {\n      setGridClass(styles.grid2x2);\n      // one empty spot\n    } else if (newParticipants.length === 2) {\n      setGridClass(styles.grid2x1);\n    } else if (newParticipants.length === 1) {\n      setGridClass(styles.grid1x1);\n    }\n    setVisibleParticipants(newParticipants);\n  }, [participants]);\n\n  if (error) {\n    return <div className=\"error\">{error}</div>;\n  }\n\n  if (!room) {\n    return <div>room closed</div>;\n  }\n\n  if (visibleParticipants.length === 0) {\n    return <div />;\n  }\n\n  const audioRenderers = audioTracks.map((track) => (\n    <AudioRenderer key={track.sid} track={track} isLocal={false} />\n  ));\n\n  return (\n    <div className={`${styles.stage} ${gridClass}`}>\n      {visibleParticipants.map((participant) => (\n        <ParticipantView\n          key={participant.identity}\n          participant={participant}\n          orientation=\"landscape\"\n          width=\"100%\"\n          height=\"100%\"\n          adaptiveVideo\n        />\n      ))}\n      {audioRenderers}\n    </div>\n  );\n};\n","import React from 'react';\n\nexport default function HomePage() {\n  return <div />;\n}\n","import {\n  Participant, RemoteParticipant, RemoteVideoTrack, VideoQuality,\n} from 'livekit-client';\nimport {\n  AudioRenderer, LiveKitRoom, ParticipantView, ScreenShareView, StageProps,\n} from 'livekit-react';\nimport React, { ReactElement } from 'react';\nimport {\n  onConnected, stopRecording, TemplateProps, useParams,\n} from './common';\nimport styles from './SpeakerPage.module.css';\n\nexport default function SpeakerPage({ interfaceStyle }: TemplateProps) {\n  const { url, token } = useParams();\n\n  if (!url || !token) {\n    return <div className=\"error\">missing required params url and token</div>;\n  }\n\n  let containerClass = 'roomContainer';\n  if (interfaceStyle) {\n    containerClass += ` ${interfaceStyle}`;\n  }\n  return (\n    <div className={containerClass}>\n      <LiveKitRoom\n        url={url}\n        token={token}\n        onConnected={onConnected}\n        onLeave={stopRecording}\n        stageRenderer={renderStage}\n        adaptiveVideo\n      />\n    </div>\n  );\n}\n\nconst renderStage: React.FC<StageProps> = ({ roomState }: StageProps) => {\n  const {\n    error, room, participants, audioTracks,\n  } = roomState;\n\n  if (error) {\n    return <div className=\"error\">{error.message}</div>;\n  }\n\n  if (!room) {\n    return <div>room closed</div>;\n  }\n\n  // find first participant with screen shared\n  let screenTrack: RemoteVideoTrack | undefined;\n  const remoteParticipants = participants.filter((p) => (p instanceof RemoteParticipant));\n  remoteParticipants.forEach((p) => {\n    p.videoTracks.forEach((track) => {\n      if (track.trackName === 'screen' && track.track) {\n        screenTrack = track.track as RemoteVideoTrack;\n      }\n    });\n  });\n\n  if (remoteParticipants.length === 0) {\n    return <div />;\n  }\n\n  const audioRenderers = audioTracks.map((track) => (\n    <AudioRenderer key={track.sid} track={track} isLocal={false} />\n  ));\n\n  // full screen a single participant\n  if (remoteParticipants.length === 0 && !screenTrack) {\n    return (\n      <>\n        <ParticipantView\n          participant={remoteParticipants[0]}\n          width=\"100%\"\n          height=\"100%\"\n          orientation=\"landscape\"\n        />\n        {audioRenderers}\n      </>\n    );\n  }\n\n  let otherParticipants: Participant[];\n  let mainView: ReactElement;\n  if (screenTrack) {\n    otherParticipants = remoteParticipants;\n    mainView = (\n      <ScreenShareView track={screenTrack} height=\"100%\" width=\"100%\" />\n    );\n  } else {\n    otherParticipants = remoteParticipants.slice(1);\n    mainView = (\n      <ParticipantView\n        key={remoteParticipants[0].identity}\n        participant={remoteParticipants[0]}\n        width=\"100%\"\n        height=\"100%\"\n        orientation=\"landscape\"\n        quality={VideoQuality.HIGH}\n      />\n    );\n  }\n\n  return (\n    <div className={styles.stage}>\n      <div className={styles.stageCenter}>{mainView}</div>\n      <div className={styles.stageSidebar}>\n        {otherParticipants.map((participant) => (\n          <ParticipantView\n            key={participant.identity}\n            participant={participant}\n            width=\"100%\"\n            height=\"100%\"\n            orientation=\"landscape\"\n            adaptiveVideo\n          />\n        ))}\n      </div>\n      {audioRenderers}\n    </div>\n  );\n};\n","import 'livekit-react/dist/index.css';\nimport React from 'react';\nimport 'react-aspect-ratio/aspect-ratio.css';\nimport {\n  HashRouter as Router, Route, Switch,\n} from 'react-router-dom';\nimport './App.css';\nimport GridPage from './GridPage';\nimport HomePage from './HomePage';\nimport SpeakerPage from './SpeakerPage';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Router>\n        <Switch>\n          <Route path=\"/speaker-light\">\n            <SpeakerPage interfaceStyle=\"light\" />\n          </Route>\n          <Route path=\"/speaker-dark\">\n            <SpeakerPage interfaceStyle=\"dark\" />\n          </Route>\n          <Route path=\"/grid-light\">\n            <GridPage interfaceStyle=\"light\" />\n          </Route>\n          <Route path=\"/grid-dark\">\n            <GridPage interfaceStyle=\"dark\" />\n          </Route>\n          <Route path=\"/\" component={HomePage} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stage\":\"GridPage_stage__W5woq\",\"grid1x1\":\"GridPage_grid1x1__wL8ic\",\"grid2x1\":\"GridPage_grid2x1__VdVVI\",\"grid2x2\":\"GridPage_grid2x2__Bv9yw\",\"grid3x3\":\"GridPage_grid3x3__1nRGi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stage\":\"SpeakerPage_stage__1bMqb\",\"stageCenter\":\"SpeakerPage_stageCenter__3CGET\",\"stageSidebar\":\"SpeakerPage_stageSidebar__3lTj4\"};"],"sourceRoot":""}